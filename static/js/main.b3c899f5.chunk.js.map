{"version":3,"sources":["utils/API.js","components/hero/hero.js","components/search/search.js","components/row/row.js","components/table/table.js","App.js","index.js"],"names":["Promise","resolve","reject","axios","get","then","res","results","data","map","user","DOB","dob","date","split","image","picture","thumbnail","empname","name","first","last","phone","email","catch","err","Hero","className","Search","props","type","placeholder","value","searchTerm","onChange","handleInputChange","Row","src","alt","Table","onClick","handleSort","data-value","sortOrder","filterEmps","emps","App","useState","setEmps","setSearchTerm","setFilterEmps","setSortOrder","useEffect","loadEmps","loadEmpsByName","API","tempArr","filter","emp","toLowerCase","includes","event","target","sort","getAttribute","a","b","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3c899f5.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the random user API\nexport default {\n  getRoster: function() {\n    return new Promise((resolve, reject) => {\n      axios.get(\"https://randomuser.me/api/?results=50\").then((res) => {\n        const users = res.data.results;\n        const results = users.map((user) => {\n          //Format date to exlude extra information\n          const DOB = user.dob.date.split('T');\n          return {\n            image: user.picture.thumbnail,\n            empname: `${user.name.first} ${user.name.last}`,\n            phone: user.phone,\n            email: user.email,\n            dob: DOB[0]            \n          };\n        });\n        resolve(results);\n      }).catch((err) => reject(err));\n    });\n  },\n\n};\n","import React from \"react\";\nimport \"./hero.css\";\n\nfunction Hero() {\n  return (\n    <div>\n      <header className=\"hero-section\">\n        <h1 className=\"hero-headline\">Employee Directory</h1>        \n      </header>\n      <div className=\"hero-ribbon\"></div>\n    </div>\n  );\n}\n\nexport default Hero;","import React from \"react\";\nimport \"./search.css\";\n\nfunction Search(props) {\n  return (\n    <div className=\"grid-x\">\n      <input className=\"searchBar\" type=\"search\" placeholder=\"Search\" value={props.searchTerm} onChange={props.handleInputChange}/>\n    </div>\n\n  );\n}\n\nexport default Search;","import React from \"react\";\nimport \"./row.css\";\n\n\nfunction Row({ image, name, email, phone, dob }) {\n  return (\n    <tr>\n      <td><img src={image} alt={name}/></td>\n      <td>{name}</td>\n      <td>{phone}</td>\n      <td>{email}</td>\n      <td>{dob}</td>\n    </tr>  \n  );\n}\n\nexport default Row;","import React from \"react\";\nimport \"./table.css\";\nimport Row from \"../row/row\";\n\nfunction Table(props) {\n  return (\n    <table className=\"hover\">\n      <thead>\n        <tr>\n          <th>Image</th>\n          <th className=\"name-header\" onClick={props.handleSort} data-value={props.sortOrder}>Name <i className=\"fas fa-sort\"></i></th>\n          <th>Phone</th>\n          <th>Email</th>\n          <th>DOB</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.filterEmps.map(emps => (\n          <Row\n            image={emps.image}\n            name={emps.empname}\n            email={emps.email}\n            phone={emps.phone}\n            dob={emps.dob}\n            key={emps.empname}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;","import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport API from \"./utils/API\";\n\nimport Hero from \"./components/hero/hero\";\nimport Search from \"./components/search/search\";\nimport Table from \"./components/table/table\";\n\nfunction App() {\n\n  const [emps, setEmps] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filterEmps, setFilterEmps] = useState([]);\n  const [sortOrder, setSortOrder] = useState(\"\");\n  //Add additional states to track sorting of each field\n\n  useEffect(() => {\n      loadEmps();  \n  }, []);\n\n  useEffect(() => {\n    if (searchTerm) {\n      loadEmpsByName();\n    }    \n  }, [searchTerm]);\n\n  const loadEmps = () => {\n    API.getRoster()\n      .then((emps) => {\n        setEmps(emps);\n        setFilterEmps(emps);\n      })\n  };\n\n  const loadEmpsByName = () => {\n    let tempArr = emps.filter(emp => emp.empname.toLowerCase().includes(searchTerm));\n    setFilterEmps(tempArr);\n  };\n\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value.toLowerCase());\n    loadEmpsByName();\n  };\n\n  const handleSort = event => {\n    let sort = event.target.getAttribute(\"data-value\");\n\n    if (sort === \"descending\") {\n      setEmps(emps.sort((a,b)=> (a.empname < b.empname ? 1 : -1)));\n      setSortOrder(\"ascending\");\n    } else if ( sort === \"ascending\") {\n      setEmps(emps.sort((a,b)=> (a.empname > b.empname ? 1 : -1)));\n      setSortOrder(\"descending\");\n    } else {\n      setEmps(emps.sort((a,b)=> (a.empname > b.empname ? 1 : -1)));\n      setSortOrder(\"descending\");\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Hero />\n      <Search \n      handleInputChange={handleInputChange}\n      results={searchTerm}\n      />\n      <Table\n        filterEmps={filterEmps}\n        handleSort={handleSort}\n        sortOrder={sortOrder}\n      />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}